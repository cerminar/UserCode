Index: PhysicsTools/TagAndProbe/src/BaseTreeFiller.cc
===================================================================
RCS file: /local/reps/CMSSW/CMSSW/PhysicsTools/TagAndProbe/src/BaseTreeFiller.cc,v
retrieving revision 1.16
diff -u -8 -p -r1.16 BaseTreeFiller.cc
--- PhysicsTools/TagAndProbe/src/BaseTreeFiller.cc	13 Dec 2011 02:32:35 -0000	1.16
+++ PhysicsTools/TagAndProbe/src/BaseTreeFiller.cc	21 Aug 2012 10:22:46 -0000
@@ -64,16 +64,17 @@ tnp::BaseTreeFiller::BaseTreeFiller(cons
       PUweightSrc_   = iConfig.getParameter<edm::InputTag>("PUWeightSrc"); 
       tree_->Branch("PUweight", &PUweight_, "PUweight/F");
     }
 
     addRunLumiInfo_ = iConfig.existsAs<bool>("addRunLumiInfo") ? iConfig.getParameter<bool>("addRunLumiInfo") : false;
     if (addRunLumiInfo_) {
          tree_->Branch("run",  &run_,  "run/i");
          tree_->Branch("lumi", &lumi_, "lumi/i");
+         tree_->Branch("bx", &bx_, "bx/i");
          tree_->Branch("event", &event_, "event/i");
     }
     addEventVariablesInfo_ = iConfig.existsAs<bool>("addEventVariablesInfo") ? iConfig.getParameter<bool>("addEventVariablesInfo") : false;
     if (addEventVariablesInfo_) {      
       tree_->Branch("event_nPV"        ,&mNPV_                 ,"mNPV/I");
       tree_->Branch("event_met_calomet"    ,&mMET_                ,"mMET/F");
       tree_->Branch("event_met_calosumet"  ,&mSumET_              ,"mSumET/F");
       tree_->Branch("event_met_calometsignificance",&mMETSign_    ,"mMETSign/F");
@@ -139,16 +140,17 @@ tnp::BaseTreeFiller::addBranches_(TTree 
     
 }
 
 tnp::BaseTreeFiller::~BaseTreeFiller() { }
 
 void tnp::BaseTreeFiller::init(const edm::Event &iEvent) const {
     run_  = iEvent.id().run();
     lumi_ = iEvent.id().luminosityBlock();
+    bx_   = iEvent.eventAuxiliary().bunchCrossing();
     event_ = iEvent.id().event(); 
 
     for (std::vector<tnp::ProbeVariable>::const_iterator it = vars_.begin(), ed = vars_.end(); it != ed; ++it) {
         it->init(iEvent);
     }
     for (std::vector<tnp::ProbeFlag>::const_iterator it = flags_.begin(), ed = flags_.end(); it != ed; ++it) {
         it->init(iEvent);
     }
